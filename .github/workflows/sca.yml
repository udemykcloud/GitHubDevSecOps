name: 20 SCA
on:
  workflow_dispatch:
  workflow_call:
jobs:
  sca:
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        manifest_file: [ "pom.xml" ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    name: SCA Java project
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout action
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          cache: maven
      - name: Install SCA tool (CRDA)
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          github_pat: ${{ github.token }}
          crda: "latest"
      - name: SCA (CRDA) Scan
        id: crda_scan
        uses: redhat-actions/crda@main
        with:
          manifest_file: ${{ matrix.manifest_file }}
          snyk_token: ${{ secrets.SNYK_TOKEN }}
          fail_on: never
      - name: Print JSON analysis report
        if: ${{ always() && steps.crda_scan.outputs.crda_report_json }}
        run: cat ${{ steps.crda_scan.outputs.crda_report_json }}
      - name: Print SARIF analysis report
        if: ${{ always() && steps.crda_scan.outputs.crda_report_sarif }}
        run: cat ${{ steps.crda_scan.outputs.crda_report_sarif }}
      - name: Print Report Link
        run: echo ${{ steps.crda_scan.outputs.report_link }}
      - name: Print Artifact Name
        run: echo ${{ steps.crda_scan.outputs.artifact_name }}
